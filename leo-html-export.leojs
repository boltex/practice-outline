{
  "leoHeader": {
    "fileFormat": 2
  },
  "vnodes": [
    {
      "gnx": "felix.20250907225434.1",
      "vh": "top node",
      "children": [
        {
          "gnx": "felix.20250907225454.1",
          "vh": "First child"
        },
        {
          "gnx": "felix.20250907234546.1",
          "vh": "another same level"
        }
      ]
    },
    {
      "gnx": "felix.20250907225515.1",
      "vh": "test script"
    },
    {
      "gnx": "felix.20250907235416.1",
      "vh": "top node",
      "children": [
        {
          "gnx": "felix.20250907235416.2",
          "vh": "First child"
        },
        {
          "gnx": "felix.20250907235416.3",
          "vh": "another same level"
        },
        {
          "gnx": "felix.20250907235421.1",
          "vh": "top node",
          "children": [
            {
              "gnx": "felix.20250907235421.2",
              "vh": "First child"
            },
            {
              "gnx": "felix.20250907235421.3",
              "vh": "another same level"
            }
          ]
        }
      ]
    }
  ],
  "tnodes": {
    "felix.20250907225434.1": "Some body content\n",
    "felix.20250907225454.1": "\nSome child content",
    "felix.20250907234546.1": "inside other at same level",
    "felix.20250907225515.1": "@language typescript\ng.es('Running script!');\n\n// Convert to an HTML structure like this one:\n/*\n    <!-- \n    'li' elements represent nodes. They each have a caret, text span and a single 'ul' for children.\n    data-id distinguishes node positions, the data-gnx identifies body content.\n    1 body can be used in multiple positions (nodes) that's why data-id and data-gnx differ.\n    (TODO: data-id MAY be omitted if not needed.)\n    data-expanded controls whether children are shown or hidden.\n    Clicking the caret expands/collapses and selects the node. Clickng the text selects only.\n    -->\n    <div id=\"outline-pane\" tabindex=\"0\">\n        <ul>\n            <li data-id=\"1\" data-gnx=\"1\" data-expanded=\"false\">\n                <span class=\"caret\"></span><span class=\"node-text\">Section 1</span>\n                <ul>\n                    <li data-id=\"2\" data-gnx=\"2\" data-expanded=\"false\">\n                        <span class=\"caret\"></span><span class=\"node-text\">Page A</span>\n                        <ul>\n                            <li data-id=\"3\" data-gnx=\"3\" data-expanded=\"false\">\n                                <span class=\"caret\"></span><span class=\"node-text\">Subpage A.1</span>\n                                <ul></ul>\n                            </li>\n                            <li data-id=\"4\" data-gnx=\"4\" data-expanded=\"false\">\n                                <span class=\"caret\"></span><span class=\"node-text\">Subpage A.2</span>\n                                <ul></ul>\n                            </li>\n                        </ul>\n                    </li>\n                    <li data-id=\"5\" data-gnx=\"5\" data-expanded=\"false\">\n                        <span class=\"caret\"></span><span class=\"node-text\">Page B</span>\n                        <ul></ul>\n                    </li>\n                </ul>\n            </li>\n            <li data-id=\"6\" data-gnx=\"6\" data-expanded=\"false\">\n                <span class=\"caret\"></span><span class=\"node-text\">Section 2</span>\n                <ul>\n                    <li data-id=\"7\" data-gnx=\"7\" data-expanded=\"false\">\n                        <span class=\"caret\"></span><span class=\"node-text\">Page C (Repeated)</span>\n                        <ul></ul>\n                    </li>\n                    <li data-id=\"8\" data-gnx=\"8\" data-expanded=\"false\">\n                        <span class=\"caret\"></span><span class=\"node-text\">Page D</span>\n                        <ul></ul>\n                    </li>\n                    <li data-id=\"9\" data-gnx=\"7\" data-expanded=\"false\">\n                        <span class=\"caret\"></span><span class=\"node-text\">Page C (Repeated)</span>\n                        <ul></ul>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n\n\n*/\n\nlet currentLevel = -1; // Start \"before\" the root level.\n// Start the output with the opening <div> and <ul>\nlet output = `<div id=\"outline-pane\" tabindex=\"0\">\n    <ul>`;\nconst indentation = '        ';\nlet nodeTotal = 0; // To generate unique data-id values.\n\n// c is already defined as the current commander.\nfor( const p of c.all_positions()){\n    nodeTotal += 1;\n    // g.es(`Processing node number:${nodeTotal} ${p.h} at level ${p.level()}`);\n    if(p.level() > currentLevel){\n        // We are going deeper in the tree, the first child of the previous node.\n        // Increase current level\n        currentLevel = p.level();\n        // Open a new <li>\n        output += `\\n${indentation.repeat(currentLevel+1)}<li data-id=\"${nodeTotal}\" data-gnx=\"${p.gnx}\" data-expanded=\"false\">\n${indentation.repeat(currentLevel+1)}    <span class=\"caret\"></span><span class=\"node-text\">${p.h}</span>\n${indentation.repeat(currentLevel+1)}    <ul>`;\n        // Leaving current level as is, we are now inside the new <ul>, ready for any children.\n    }else if(p.level() < currentLevel){\n        // Close one or more <ul> and <li>\n        while(currentLevel > p.level()){\n            output += `\\n${indentation.repeat(currentLevel+1)}</ul>\n${indentation.repeat(currentLevel+1)}</li>`;\n            currentLevel -= 1;\n        }\n        // Now at the correct level, close previous <li> and open a new one\n        output += `\\n${indentation.repeat(currentLevel+1)}    </ul>\n${indentation.repeat(currentLevel+1)}</li>`;\n        output += `\\n${indentation.repeat(currentLevel+1)}<li data-id=\"${nodeTotal}\" data-gnx=\"${p.gnx}\" data-expanded=\"false\">\n${indentation.repeat(currentLevel+1)}    <span class=\"caret\"></span><span class=\"node-text\">${p.h}</span>\n${indentation.repeat(currentLevel+1)}    <ul>`;\n        // Leaving current level as is, we are now inside the new <ul>, ready for any children.\n    }else{\n        // Same level, close previous <li> and open a new one\n        output += `\\n${indentation.repeat(currentLevel+1)}    </ul>\n${indentation.repeat(currentLevel+1)}</li>`;\n        output += `\\n${indentation.repeat(currentLevel+1)}<li data-id=\"${nodeTotal}\" data-gnx=\"${p.gnx}\" data-expanded=\"false\">\n${indentation.repeat(currentLevel+1)}    <span class=\"caret\"></span><span class=\"node-text\">${p.h}</span>\n${indentation.repeat(currentLevel+1)}    <ul>`;\n    }\n}\n// Set level to 0 and close remaining open tags\nwhile(currentLevel > -1){\n    output += `\\n${indentation.repeat(currentLevel+1)}    </ul>\n${indentation.repeat(currentLevel+1)}</li>`;\n    currentLevel -= 1;\n}\n\n// Close the opening <ul> and <div>\noutput += `\\n    </ul>\n</div>`;\n\ng.es('Done! Output is:\\n' + output);\n\noutput = \"\";\n// Now output the json dict of the bodies like so where the key is the gnx:\n/*\n        const bodies = {\n            \"1\": \"Section 1 content here\\nMultiple lines supported.\",\n            \"2\": \"Page A content here\\nMore text.\",\n            \"3\": \"Subpage A.1 content here\",\n            \"4\": \"Subpage A.2 content here\",\n            \"5\": \"Page B content here\",\n            \"6\": \"Section 2 content here\",\n            \"7\": \"Page C (Repeated) content here\\nSame (body content) GNX used twice, with different (position) IDs.\",\n            \"8\": \"Page D content here\"\n        };\n*/\n\noutput += `\\nconst bodies = {`;\nlet first = true;\nfor( const p of c.all_unique_positions()){\n    if(first){\n        first = false;\n    }else{\n        output += `,`;\n    }\n    // Escape backslashes and double quotes in body text\n    const bodyText = p.b ? JSON.stringify(p.b) : '';\n    output += `\\n    \"${p.gnx}\": ${bodyText}`; // Will already be quoted appropriately by JSON.stringify\n}\noutput += `\\n};`;\ng.es('Done! Bodies output is:\\n' + output);",
    "felix.20250907235416.1": "Some body content\n",
    "felix.20250907235416.2": "\nSome child content",
    "felix.20250907235416.3": "inside other at same level",
    "felix.20250907235421.1": "Some body content\n",
    "felix.20250907235421.2": "\nSome child content",
    "felix.20250907235421.3": "inside other at same level"
  }
}